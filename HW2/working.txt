
OracleOfBacon
  instance
    when new
      should not be valid
    when only From is specified
      should be valid
      from
        should == "Carrie Fisher"
      to
        should == "Kevin Bacon"
    when only To is specified
      should be valid
      from
        should == "Kevin Bacon"
      to
        should == "Ian McKellen"
    when From and To are both specified
      and distinct
        should be valid
        from
          should == "Carrie Fisher"
        to
          should == "Ian McKellen"
      and the same
        should not be valid
  parsing XML response
    for unauthorized access/invalid API key
      type
        should == :error
      data
        should == "Unauthorized access"
    for a normal match
      type
        should == :graph
      data
        should == ["Carrie Fisher", "Under the Rainbow (1981)", "Chevy Chase", "Doogal (2006)", "Ian McKellen"]
    for a spellcheck match
      type
        should == :spellcheck
      data
        should have 34 elements
      data
        should include "Anthony Perkins (I)"
      data
        should include "Anthony Parkin"
    for unknown response
      type
        should == :unknown
      data
        should match /unknown/i
  constructing URI
    should match /
        ([a-zA-Z][\-+.a-zA-Z\d]*):                           (?# 1: scheme)
        (?:
           ((?:[\-_.!~*'()a-zA-Z\d;?:@&=+$,]|%[a-fA-F\d]{2})(?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*)                    (?# 2: opaque)
        |
           (?:(?:
             \/\/(?:
                 (?:(?:((?:[\-_.!~*'()a-zA-Z\d;:&=+$,]|%[a-fA-F\d]{2})*)@)?        (?# 3: userinfo)
                   (?:((?:(?:[a-zA-Z0-9\-.]|%\h\h)+|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\[(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})|(?:(?:[a-fA-F\d]{1,4}:)*[a-fA-F\d]{1,4})?::(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))?)\]))(?::(\d*))?))? (?# 4: host, 5: port)
               |
                 ((?:[\-_.!~*'()a-zA-Z\d$,;:@&=+]|%[a-fA-F\d]{2})+)                 (?# 6: registry)
               )
             |
             (?!\/\/))                           (?# XXX: '\/\/' is the mark for hostport)
             (\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*(?:\/(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&=+$,]|%[a-fA-F\d]{2})*)*)*)?                    (?# 7: path)
           )(?:\?((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                 (?# 8: query)
        )
        (?:\#((?:[\-_.!~*'()a-zA-Z\d;\/?:@&=+$,\[\]]|%[a-fA-F\d]{2})*))?                  (?# 9: fragment)
      /x
    should match /p=fake_key/
    should match /a=George\+Clooney/
    should match /b=3%252\+%22a/
  service connection
    should create XML if valid response
    should raise OracleOfBacon::NetworkError if network problem

Finished in 0.02873 seconds
27 examples, 0 failures
